
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private Timer tin;
    private Timer tout;
    private Queue servletQueue;
    private long endTime, MAX_TIME = 0, totalTime = 0;
    private Random random = new Random();
    private int counter;
    private long dequeueTime;
    private int flag = 0;
    int n;

    public MainJFrame() {
        initComponents();
        counter = 0;
        servletQueue = new Queue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        startBtn = new javax.swing.JButton();
        showBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        timeValue = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        minTime = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        maxTime = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        secondslbl = new javax.swing.JLabel();
        numberlbl = new javax.swing.JLabel();
        maxlbl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        avglbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startBtn.setText("Start");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        showBtn.setText("Show");
        showBtn.setEnabled(false);
        showBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(showBtn)
                    .addComponent(startBtn))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(startBtn)
                .addGap(180, 180, 180)
                .addComponent(showBtn)
                .addGap(148, 148, 148))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jLabel1.setText("Enter number of seconds:");

        jLabel2.setText("Min time:");

        jLabel3.setText("Max Time:");

        maxTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxTimeActionPerformed(evt);
            }
        });

        jLabel4.setText("Number of requests processed in");

        jLabel5.setText("seconds are:");

        jLabel6.setText("Maximum time spent by any node in Queue:");

        secondslbl.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        secondslbl.setForeground(new java.awt.Color(255, 0, 0));
        secondslbl.setText("____");

        numberlbl.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        numberlbl.setForeground(new java.awt.Color(255, 0, 0));
        numberlbl.setText("____");

        maxlbl.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        maxlbl.setForeground(new java.awt.Color(255, 0, 0));
        maxlbl.setText("____");

        jLabel7.setText("Average time spent by any of these nodes in the queue:");

        avglbl.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        avglbl.setForeground(new java.awt.Color(255, 0, 0));
        avglbl.setText("____");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(70, 70, 70)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(timeValue)
                                    .addComponent(minTime)
                                    .addComponent(maxTime, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(264, 264, 264)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(maxlbl)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(secondslbl)
                                        .addGap(34, 34, 34)
                                        .addComponent(jLabel5)
                                        .addGap(32, 32, 32)
                                        .addComponent(numberlbl))
                                    .addComponent(avglbl)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(timeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(minTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(85, 85, 85)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(secondslbl)
                    .addComponent(jLabel5)
                    .addComponent(numberlbl))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(maxlbl))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(avglbl))
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBtnActionPerformed

        secondslbl.setText(String.valueOf(n));
        numberlbl.setText(String.valueOf(counter));
        maxlbl.setText(String.valueOf((int) MAX_TIME / 1000));

        float average = totalTime / counter;

        avglbl.setText(String.valueOf(average / 1000));

    }//GEN-LAST:event_showBtnActionPerformed

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed

        n = Integer.parseInt(timeValue.getText());
        int min = Integer.parseInt(minTime.getText());
        int max = Integer.parseInt(maxTime.getText());

        tin = new Timer();
        tout = new Timer();

        endTime = n * 1000 + System.currentTimeMillis();

        dequeueTime = random.nextInt((max + 1) - min) + 1;
        tin.scheduleAtFixedRate(new TimerTask() {

            @Override
            public void run() {
                if (System.currentTimeMillis() < endTime) {

                    int randominput = random.nextInt(10 - 1) + 1;
                    int randomnumber = random.nextInt(4 - 1) + 1;

                    System.out.println("Adding requests to the queue!");

                    for (int i = 0; i < randomnumber; i++) {
                        servletQueue.enqueue(randominput, System.currentTimeMillis());
                    }

                    System.out.println(randomnumber + " request(s) requests are added to the queue");
                    System.out.println("There are " + servletQueue.size() + " request(s) in the queue");
                    System.out.println("\n");
                } else {
                    tin.cancel();
                }
            }
        }, 0, 1000);

        tout.scheduleAtFixedRate(new TimerTask() {

            @Override
            public void run() {

                if (System.currentTimeMillis() < endTime) {
                    if (flag >= dequeueTime) {
                        System.out.println("Starting to process request..");
                        Node n = servletQueue.dequeue();
                        long nodeTime = System.currentTimeMillis() - n.startTime;
                        totalTime = totalTime + nodeTime;
                        if (MAX_TIME < nodeTime) {
                            MAX_TIME = nodeTime;
                        }
                        counter++;
                        System.out.println("Request is processed and queue size is now " + servletQueue.size());
                        System.out.println("\n");
                        dequeueTime = random.nextInt((max + 1) - min) + 1;
                        flag = 0;
                    }
                    flag++;
                } else {
                    tout.cancel();
                }
            }
        }, dequeueTime * 1000, 1000);

//        int randomTime = random.nextInt((max + 1) - min) + 1;
//        long startTime = System.currentTimeMillis();
//        long endTime = startTime + randomTime * 1000;
//        tout = new Timer();
//        tout.scheduleAtFixedRate(new TimerTask() {
//            @Override
//            public void run() {
//
//            }
//        }, 0, n * 1000);
        showBtn.setEnabled(true);
    }//GEN-LAST:event_startBtnActionPerformed

    private void maxTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxTimeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avglbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField maxTime;
    private javax.swing.JLabel maxlbl;
    private javax.swing.JTextField minTime;
    private javax.swing.JLabel numberlbl;
    private javax.swing.JLabel secondslbl;
    private javax.swing.JButton showBtn;
    private javax.swing.JButton startBtn;
    private javax.swing.JTextField timeValue;
    // End of variables declaration//GEN-END:variables
}
